{"version":3,"sources":["components/Cards/Card.module.css","api/index.js","components/Cards/Card.jsx","components/Chart/Chart.jsx","components/PickCountry/PickCountry.jsx","App.js","index.js","App.module.css","images/Covid19.jpg","components/Chart/Chart.module.css","components/PickCountry/PickCountry.module.css"],"names":["module","exports","url","fetchGlobal","country","a","changedUrl","axios","get","data","confirmed","deaths","recovered","lastUpdate","console","log","fetchDailyData","dailydata","map","daily","total","date","reportDate","fetchCountries","countries","name","card","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","CardContent","Typography","color","variant","gutterBottom","start","end","value","duration","separator","Date","toDateString","CardActions","Button","size","target","href","CircularProgress","Chart","useState","dataDaily","setdataDaily","useEffect","fetchData","LineChart","undefined","labels","datasets","label","borderColor","fill","backgroundColor","BarChart","options","legend","display","title","text","PickCountry","handleCountryChange","setcountries","countriesList","FormControl","NativeSelect","defaultValue","onChange","e","key","App","state","resp","setState","this","src","Covid19","Image","alt","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dfaeb7c1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Card_container__1e-hy\",\"card\":\"Card_card__3xPQZ\",\"confirmed\":\"Card_confirmed__2_3hu\",\"recovered\":\"Card_recovered__2npDe\",\"deaths\":\"Card_deaths__2lQd4\"};","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchGlobal = async (country) => {\r\n    try{\r\n        let changedUrl = url;\r\n        if(country)\r\n        {\r\n            changedUrl = `${url}/countries/${country}`;\r\n        }\r\n        const {data: {confirmed,deaths,recovered,lastUpdate}} = await axios.get(changedUrl);\r\n        return {confirmed,deaths,recovered,lastUpdate};\r\n    }\r\n    catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async() =>{\r\n    try{\r\n        const {data} = await axios.get(`${url}/daily`);\r\n       const dailydata = data.map((daily) => ({\r\n           confirmed:daily.confirmed.total,\r\n           deaths:daily.deaths.total,\r\n           date:daily.reportDate\r\n       })\r\n       );\r\n\r\n       return dailydata;\r\n    }\r\n    catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n\r\nexport const fetchCountries = async() =>{\r\n    try{\r\n        const {data:{countries}} = await axios.get(`${url}/countries`);\r\n       return countries.map((country) => country.name);\r\n    }\r\n    catch(error){\r\n        console.log(error);\r\n    }\r\n}","import React from 'react';\r\nimport {Grid,Card,CardContent,Typography, Button, CardActions,CircularProgress} from '@material-ui/core';\r\nimport styles from './Card.module.css';\r\nimport Countup from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\n\r\nconst card = ({data:{confirmed,recovered,deaths,lastUpdate}}) => {\r\n\r\n    if(!confirmed)\r\n    {\r\n        return(<CircularProgress />);\r\n    }\r\n    return(\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.confirmed,styles.card)}>\r\n                    <CardContent>\r\n                        <Typography color=\"primary\" variant=\"h6\" gutterBottom>Confirmed</Typography>\r\n                        <Typography variant=\"h6\">\r\n                            <Countup start={0} end={confirmed.value} duration={1.6} separator=\",\">\r\n                            </Countup>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"subtitle1\"> Number of Confirmed cases </Typography>\r\n                    </CardContent>\r\n                    <CardActions>\r\n                        <Button size=\"small\" target='_blank' href=\"https://coronavirus.jhu.edu/map.html\">\r\n                            Learn More</Button>\r\n                    </CardActions>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.deaths,styles.card)}>\r\n                    <CardContent>\r\n                        <Typography color=\"secondary\" variant=\"h6\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h6\">\r\n                            <Countup start={0} end={deaths.value} duration={1.8} separator=\",\">\r\n                            </Countup>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"subtitle1\"> Number of deaths caused</Typography>\r\n                    </CardContent>\r\n                    <CardActions>\r\n                        <Button size=\"small\" target='_blank' href=\"https://coronavirus.jhu.edu/map.html\">\r\n                            Learn More</Button>\r\n                    </CardActions>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.recovered,styles.card)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textPrimary\" variant=\"h6\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h6\">\r\n                            <Countup start={0} end={recovered.value} duration={1.6} separator=\",\">\r\n                            </Countup>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"subtitle1\"> Total Recovered</Typography>\r\n                    </CardContent>\r\n                    <CardActions>\r\n                        <Button size=\"small\" target='_blank' href=\"https://coronavirus.jhu.edu/map.html\">\r\n                            Learn More</Button>\r\n                    </CardActions>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default card;","import React from 'react';\r\nimport {useState,useEffect} from 'react';\r\nimport  {fetchDailyData} from '../../api'\r\nimport {Line,Bar} from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\n\r\n\r\nconst Chart = ({data:{confirmed,recovered,deaths},country}) => {\r\n\r\n    const [dataDaily, setdataDaily] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n           setdataDaily(await fetchDailyData());\r\n        }\r\n        fetchData();\r\n    },[]);\r\n\r\n    const LineChart = (\r\n        dataDaily !== undefined ?\r\n        (<Line \r\n            data={{\r\n                labels: dataDaily.map(({date}) => date),\r\n                datasets:[{\r\n                    data: dataDaily.map(({confirmed}) => confirmed),\r\n                    label:'confirmed',\r\n                    borderColor:'#3333ff',\r\n                    fill:true,\r\n                },{\r\n                    data: dataDaily.map(({deaths}) => deaths),\r\n                    label:'deaths',\r\n                    borderColor:'red',\r\n                    backgroundColor:'rgba(255,0,0,0.5)',\r\n                    fill:true,\r\n                }],\r\n            }}\r\n        />)\r\n        : null\r\n    );\r\n\r\n    const BarChart = (\r\n         confirmed ?\r\n        (<Bar \r\n            data={{\r\n                labels:['Cofirmed','Deaths','Recovered'],\r\n                datasets:[{\r\n                    label:'People',\r\n                    backgroundColor:[\r\n                        'rgba(0, 0, 255, 0.5)',\r\n                        'rgba(255, 0, 0, 0.5)',\r\n                        'rgba(0, 255, 0, 0.5)'\r\n                    ],\r\n                    data:[confirmed.value,deaths.value,recovered.value]\r\n                }]\r\n            }}\r\n            options={{\r\n                legend:{display:false},\r\n                title: {display:true, text:`Showing ${country} country`}\r\n            }}\r\n        \r\n        />)\r\n        : null\r\n    );\r\n\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n            {country ? BarChart : LineChart}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Chart;","import React,{useState,useEffect} from 'react';\r\nimport {FormControl,NativeSelect} from '@material-ui/core';\r\nimport {fetchCountries} from '../../api';\r\nimport styles from './PickCountry.module.css';\r\n\r\nconst PickCountry = ({handleCountryChange}) => {\r\n\r\n    const [countries, setcountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const countriesList = async () =>{\r\n            setcountries(await fetchCountries());\r\n        }\r\n\r\n        countriesList();\r\n    },[setcountries]);\r\n\r\n\r\n    console.log(countries);\r\n    return(\r\n        <>\r\n        <FormControl className={styles.FormControl} >\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => {handleCountryChange(e.target.value)}}>\r\n                <option value=\"\">Global (Worldwide)</option>\r\n                {countries.map((country) =>   <option value={country} key={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default PickCountry;","import React from 'react';\nimport Covid19 from './images/Covid19.jpg'\nimport styles from './App.module.css';\nimport {fetchGlobal} from './api';\nimport {Card, Chart, PickCountry} from './components';\n\nclass App extends React.Component{\n\n  state={\n    data:{},\n    country:'',\n  }\n\n  async componentDidMount(){\n    const resp = await fetchGlobal();\n    this.setState({\n      data: resp\n    });\n  }\n\n  handleCountryChange = async (country) => {\n    const resp = await fetchGlobal(country);\n    this.setState({\n      data: resp, country:country,\n    });\n  }\n\n  render(){\n    const {data,country} =this.state;\n    return (\n      <div className = {styles.container}>\n        <img src={Covid19} className={styles.Image} alt=\"Covid-19\"></img>\n        <Card data={data}/>\n        <PickCountry handleCountryChange={this.handleCountryChange}/>\n        <Chart data={data} country={country}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__25P4O\",\"Image\":\"App_Image__2MZ4q\"};","module.exports = __webpack_public_path__ + \"static/media/Covid19.8cfd2951.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1h3pQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormControl\":\"PickCountry_FormControl__1YySU\"};"],"sourceRoot":""}